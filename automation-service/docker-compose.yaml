version: "3.8"

# Networks
networks:
  queue_orchestrator:
    external: true

# Volumes
volumes:
  # DbAutomations
  dbautomations_data:


services:

  # Automations
  automations-db:
    image: postgres:alpine
    container_name: dbautomations
    environment:
      POSTGRES_DB: automation
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - '5403:5432'
    expose:
      - "5432"
    networks:
      - queue_orchestrator
    depends_on:
      gateway:
        condition: service_healthy
    volumes:
      - dbautomations_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "psql", "automation", "-U", "admin" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: on-failure

  automations-service:
    build:
      context: ./automation-service
      dockerfile: Dockerfile
    container_name: automations
    environment:
      APP_PORT: 80
    ports:
      - '2002:80'
    expose:
      - "80"
    volumes:
      - ./automation-service/:/app/
    depends_on:
      automations-db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "-q", "--spider", "http://localhost:80/health/" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - queue_orchestrator
    restart: on-failure
    command: sh -c "gunicorn -b :80 main:main_app --workers 1 --threads 8 --timeout 0 --log-level debug --reload"

